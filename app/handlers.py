from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, FSInputFile, CallbackQuery

import app.keyboards as kb
import app.database.requests as rq
import os

# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π —Ñ–∞–π–ª –º–µ—Ç–æ–¥ –≤—Å—Ç–∞–≤–ª—è–π –Ω–∏–∂–µ (found_car_by_photo)
import AI.AISearch as ai

router = Router()
class Car:
    def __init__(self, auto_name):
        self.auto_name = auto_name

    # def __init__(self, auto_name, engine_capacity, engine_power, drive_type, body_type, price, mileage, url):
    #     self.auto_name = auto_name
    #     self.engine_capacity = engine_capacity
    #     self.engine_power = engine_power
    #     self.drive_type = drive_type
    #     self.body_type = body_type
    #     self.price = price
    #     self.mileage = mileage
    #     self.url = url

car = Car('auto_name')

@router.message(CommandStart())
async def cmd_start(message: Message):
    await rq.set_user(message.from_user.id)
    await message.answer_photo(photo=FSInputFile('image\picture.png'),
                               caption='–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–∞—Ä–∫—É –∏ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø–æ —Ñ–æ—Ç–æ,'
                                        ' –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É –∞–≤—Ç–æ–º–æ–±–∏–ª—é'
                                        '\n\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –∏–ª–∏ –≤–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è',
                               reply_markup=kb.main)

@router.message(F.photo)
async def found_car_by_photo(message: Message):
    photo_id = message.photo[-1].file_id
    file = await message.bot.get_file(photo_id)
    photo_name = f"{photo_id}.jpg"
    download_direction = "image"
    download_path = os.path.join(download_direction, photo_name)
    await message.bot.download_file(file.file_path, download_path)

    # –°—é–¥–∞ –º–µ—Ç–æ–¥
    car = Car(ai.found_car_by_photo(photo_name))

    await message.answer_photo(photo=FSInputFile('image\picture.png'),
                               caption='–ù–∞—à–µ–ª –ø–æ—Ö–æ–∂–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å\n\n\n'
                                       f'–≠—Ç–æ {car.auto_name}\n\n'
                                       f'–û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è: {"engine_capacity"}\n'
                                       f'–ú–æ—â–Ω–æ—Å—Ç—å: {"engine_power"}\n'
                                       f'–ü—Ä–∏–≤–æ–¥: {"drive_type"}\n'
                                       f'–¢–∏–ø –∫—É–∑–æ–≤–∞: {"body_type"} \n\n'
                                       f'–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –Ω–∞ —Ä—ã–Ω–∫–µ: {"price"}',
                               reply_markup=kb.main_inline_keyboard)

@router.message(F.text == '–ò–∑–±—Ä–∞–Ω–Ω–æ–µüìå')
async def favourites(message: Message):
    await message.answer(text='–í–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:',
                         reply_markup=await kb.items(message.from_user.id))

@router.message(F.text)
async def found_car_by_text(message: Message):
    await message.answer_photo(photo=FSInputFile('image\picture.png'),
                               caption='–ù–∞—à–µ–ª –ø–æ—Ö–æ–∂–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å\n\n\n'
                                       f'–≠—Ç–æ {car.auto_name}\n\n'
                                       f'–û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è: {"engine_capacity"}\n'
                                       f'–ú–æ—â–Ω–æ—Å—Ç—å: {"engine_power"}\n'
                                       f'–ü—Ä–∏–≤–æ–¥: {"drive_type"}\n'
                                       f'–¢–∏–ø –∫—É–∑–æ–≤–∞: {"body_type"} \n\n'
                                       f'–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –Ω–∞ —Ä—ã–Ω–∫–µ: {"price"}',
                               reply_markup=kb.main_inline_keyboard)

@router.callback_query(F.data == 'favourite')
async def favourites(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(text='–í–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:',
                         reply_markup=await kb.items(callback.message.from_user.id))

@router.callback_query(F.data == 'ad')
async def found_ad(callback: CallbackQuery):
    await callback.answer('–ü–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π')
    await callback.message.answer_photo(photo=FSInputFile('image\picture.png'),
                                        caption=f'{car.auto_name}\n\n'
                                                f'–û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è: {"engine_capacity"}\n'
                                                f'–ú–æ—â–Ω–æ—Å—Ç—å: {"engine_power"}\n'
                                                f'–ü—Ä–∏–≤–æ–¥: {"drive_type"}\n'
                                                f'–¢–∏–ø –∫—É–∑–æ–≤–∞: {"body_type"}\n'
                                                f'–ü—Ä–æ–±–µ–≥: {"mileage"}\n\n'
                                                f'–¶–µ–Ω–∞: {"price"}',
                                        reply_markup=await kb.found_More_Ad('https://auto.drom.ru'))

@router.callback_query(F.data.startswith('items_'))
async def get_favourite_ad(callback: CallbackQuery):
    await callback.message.answer_photo(photo=FSInputFile('image\picture.png'),
                                        caption=f'{car.auto_name}\n\n'
                                                f'–û–±—ä–µ–º –¥–≤–∏–≥–∞—Ç–µ–ª—è: {"engine_capacity"}\n'
                                                f'–ú–æ—â–Ω–æ—Å—Ç—å: {"engine_power"}\n'
                                                f'–ü—Ä–∏–≤–æ–¥: {"drive_type"}\n'
                                                f'–¢–∏–ø –∫—É–∑–æ–≤–∞: {"body_type"}\n'
                                                f'–ü—Ä–æ–±–µ–≥: {"mileage"}\n\n'
                                                f'–¶–µ–Ω–∞: {"price"}',
                                        reply_markup=await kb.get_url_select_auto(callback.data.split("_")[1]))

@router.callback_query(F.data == 'add_favourites')
async def add_favourites(callback: CallbackQuery):
    await callback.answer('–î–æ–±–∞–≤–ª–µ–Ω–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
    await rq.add_item(callback.message.from_user.id, car.auto_name, 'https://auto.drom.ru')